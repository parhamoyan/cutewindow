name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Poetry
      run: pip install poetry

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Check poetry.lock is up to date
      run: |
        poetry lock --check || (echo "poetry.lock is outdated. Run \"poetry lock\" to update it." && exit 1)

    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-root
        poetry install --no-interaction

    - name: Run safety check
      run: |
        poetry run safety check || echo "Safety check failed, continuing..."

    - name: Run bandit security check
      run: |
        poetry run bandit -r qutewindow/ -f json -o bandit-report.json || echo "Bandit check failed, continuing..."
      continue-on-error: true

    - name: Upload bandit report
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-report.json

  dependency-review:
    runs-on: macos-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
